#@ *: DakotaConfig=HAVE_NPSOL
# DAKOTA INPUT FILE: dakota_trsbouu4_cantilever.in
#
# Surrogate-based OUU with trust regions:
# surrogate containing nested containing surrogate
#

environment,
	method_pointer = 'SBLO'
    tabular_data
    tabular_data_file = 'dakota_tabular.dat'

method,
	id_method = 'SBLO'
	surrogate_based_local
	model_pointer = 'OPTIM_M'
	  approx_method_pointer = 'OPTIM'
	  max_iterations = 50
	  soft_convergence_limit = 2
#	  truth_surrogate_bypass
	  trust_region
	    initial_size = 0.4
#	    contraction_factor = 0.5
#	    expansion_factor   = 1.50

###########################
# begin opt specification #
###########################
method,
	id_method = 'OPTIM'
        conmin_mfd
	  convergence_tolerance = 1.e-8

model,
	id_model = 'OPTIM_M'
	surrogate global
	  variables_pointer = 'OPTIM_V'
	  responses_pointer = 'OPTIM_R'
	  polynomial quadratic
	  dace_method_pointer = 'OPTIM_DACE'

variables,
	id_variables = 'OPTIM_V'
  continuous_design = 8
    initial_point    -0.0009234281687 -0.002220799354 0.0004082796997 -0.001775622203 -0.008768065196          0.435   0.4284094221         -0.435 
    upper_bounds     .435 .435 .435 .435 .435 .435 .435 .435
    lower_bounds     -.435 -.435 -.435 -.435 -.435 -.435 -.435 -.435
    descriptors      'd1'   'd2' 'd3' 'd4' 'd5' 'd6' 'd7' 'd8'

responses,
# minimize mean Weight
# s.t.     mean_S + 3 sigma_S <= 0
#          mean_D + 3 sigma_D <= 0
#
# NOTE: This specifies the TOTAL RESPONSE for the optimization,
#       which is a combination of nested & interface responses.
	id_responses = 'OPTIM_R'
	objective_functions = 1
	nonlinear_inequality_constraints = 0
	analytic_gradients
	no_hessians

############################
# begin DACE specification #
############################
method,
	id_method = 'OPTIM_DACE'
	model_pointer = 'OPTIM_DACE_M'
	sampling
	  sample_type lhs samples = 500
	  seed = 12347 
#	  fixed_seed					#s1
#	dace lhs seed = 5
#	  samples = 8 symbols = 8

model,
	id_model = 'OPTIM_DACE_M'
	nested
	  variables_pointer  = 'OPTIM_V'
	  sub_method_pointer = 'UQ'
	  responses_pointer  = 'OPTIM_R_NO_GRAD'
	  primary_response_mapping   = 1. 0. 
	  #secondary_response_mapping = 0. 0. 1. 3. 0. 0.
          #                             0. 0. 0. 0. 1. 3.

responses,
	id_responses = 'OPTIM_R_NO_GRAD'
	objective_functions = 1
	nonlinear_inequality_constraints = 0
	no_gradients
	no_hessians

##########################
# begin UQ specification #
##########################
method,
	id_method = 'UQ'
	model_pointer = 'UQ_M'
        sampling,
	  #output quiet
	  samples = 5000 sample_type lhs
	  seed = 12347 
#	  fixed_seed					#s1

model,
	id_model = 'UQ_M'
	surrogate global
	  variables_pointer = 'UQ_V'
	  responses_pointer = 'UQ_R'
	  dace_method_pointer = 'UQ_DACE'
	  polynomial quadratic #gaussian_process surfpack

variables,
	id_variables = 'UQ_V'
	continuous_design = 8
        uniform_uncertain = 2
           lower_bounds = 1.0 8.
           upper_bounds =  1.2 12.
           descriptors  =  'uuv1' 'wuv1'
   normal_uncertain 1
          means = 0.
          std_deviations = 3.
           descriptors  =  'nuv1'



responses,
	id_responses = 'UQ_R'
	response_functions = 1
	no_gradients
	no_hessians

############################
# begin DACE specification #
############################
method,
	id_method = 'UQ_DACE'
	model_pointer = 'UQ_DACE_M'
        sampling
	  sample_type lhs samples = 500
	  seed = 12347 
#	  fixed_seed					#s1
	  #output quiet

model,
	id_model = 'UQ_DACE_M'
	single
	  variables_pointer = 'UQ_DACE_V'
	  interface_pointer = 'UQ_ACTUAL'
	  responses_pointer = 'UQ_R'

variables,
	id_variables = 'UQ_DACE_V'
	active all
	continuous_design = 8
        uniform_uncertain = 2
           lower_bounds = 1.0 8.
           upper_bounds =  1.2 12.
           descriptors  =  'uuv1' 'wuv1'
   normal_uncertain 1
          means = 0.
          std_deviations = 3.
           descriptors  =  'nuv1'

interface,
	id_interface = 'UQ_ACTUAL'
#        direct
#          analysis_driver = 'cantilever'
#          deactivate evaluation_cache restart_file


        fork
      asynchronous evaluation_concurrency 144
      analysis_drivers = 'rosenbrock_bb_di.py'
      work_directory
      copy_files 'example_input.json'
      #deactivate evaluation_cache restart_file
      #    parameters_file = 'params.in'
      #        results_file = 'results.out'
      #


